{"version":3,"sources":["components/common/coin-value/coin-value.component.tsx","components/common/timestamp/timestamp.component.tsx","constants/timespan.constant.ts","services/block.api.service.ts","actions/block.actions.ts","components/charts/pie-chart/pie-chart.component.tsx","selectors/issuedTokens.ts","selectors/unconfirmedTransactions.ts","services/chart.api.service.ts","actions/chart.actions.ts","components/charts/chart-tooltip/chart-tooltip.component.tsx","components/charts/area-chart/area-chart.component.tsx","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","services/unconfirmed.api.service.ts","actions/unconfirmedTransactions.actions.ts","components/widgets/widget/widget.components.tsx","components/widgets/widget-button-more/widget-button-more.component.tsx","components/widgets/widget-title/widget-title.component.tsx","components/widgets/widget-table/widget-table-header/widget-table-header.tsx","components/widgets/widget-table/widget-table.component.tsx","components/widgets/widget-body/widget-body.components.tsx","constants/global.constants.ts","hooks/useInterval.ts","components/widgets/widget-blocks/widget-blocks.component.tsx","components/charts/timespan-compact/timespan-compact.component.tsx","components/charts/chart-compact/chart-compact.component.tsx","components/widgets/widget-charts/widget-charts.components.tsx","components/widgets/widget-issued-tokens/widget-issued-tokens.component.tsx","components/widgets/widget-mempool/widget-mempool.component.tsx","pages/main/main.component.tsx"],"names":["CoinValueComponent","className","this","getFormattedValue","props","coinName","environment","blockchain","toUpperCase","formattedValue","value","toFixed","split","reduceRight","arr","i","length","push","reverse","join","toString","React","PureComponent","TimestampComponent","date","dayjs","timestamp","vertical","format","TIMESPAN","BlockApiService","apiUrl","id","axios","get","then","response","data","Promise","reject","limit","offset","sortBy","sortDirection","startDate","endDate","params","BlockActions","getBlocks","dispatch","type","GET_BLOCKS","payload","GET_BLOCKS_SUCCESS","getBlock","GET_BLOCK","GET_BLOCK_SUCCESS","COLORS","PieChartComponent","state","activeIndex","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","onPieEnter","index","setState","map","item","sort","a","b","activeShape","dataKey","onMouseEnter","entry","labels","getAllIssuedTokensStructSelector","getStruct","GET_ALL_ISSUED_TOKENS_STRUCT","getUnconfirmedTransactionsStructSelector","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","ChartApiService","chartType","options","timespan","DAYS_30","ChartActions","getChart","GET_CHART","GET_CHART_SUCCESS","ChartTooltipComponent","label","transformValue","isScale","originalValue","convertInfoItemValue","VERY_SMALL_NUMBER","AreaChartComponent","formatLabel","bind","formatXLabel","formatTooltip","renderTooltip","max","ceil","apply","maxDomain","pow","width","height","x1","y1","x2","y2","stopColor","stopOpacity","compact","strokeDasharray","tick","fontSize","tickLine","tickCount","tickMargin","tickFormatter","minTickGap","hide","domain","scale","content","yAxisId","fillOpacity","animationDuration","isAnimationActive","formatNumberMetricPrefix","fractionDigits","IssuedTokensService","fetchStruct","method","url","apiUrlV1","searchQuery","query","GET_TOTAL_ISSUED_TOKENS_STRUCT","tokenId","GET_ISSUED_TOKENS_BY_ID_STRUCT","IssuedTokensActions","getTokens","trim","getAllIssuedTokens","GET_TOKENS_SUCCESS","getSearchIssuedTokensByQuery","UnconfirmedTransactionsService","UnconfirmedTransactionsActions","getMempool","getUnconfirmedTokensList","GET_UNCONFIRMED_TRANSACTIONS_SUCCESS","Widget","children","WidgetButtonMore","title","to","WidgetTitle","icon","WidgetTableHeader","tiles","WidgetTable","headerTiles","isFetching","row","Object","keys","column","j","link","linkValue","WidgetBody","WIDGET_REFRESH_INTERVAL","useInterval","callback","delay","zeroCall","savedCallback","useRef","useEffect","current","setInterval","clearInterval","WidgetBlocksComponent","connect","bindActionCreators","blocks","tableData","useMemo","reduce","acc","miner","address","minerReward","transactionsCount","minerAddress","fetching","TimespanCompactComponent","span","btnClassNames","classNames","selected","onClick","_","setTimespan","Component","ChartCompact","interval","updateChart","chartClassNames","classnames","String","info","find","renderControls","renderBody","renderChart","formatData","slice","ChartCompactComponent","chart","stats","WidgetCharts","WidgetIssuedTokensComponent","tokens","items","emissionAmount","decimals","amount","integerSeparator","WidgetMempoolComponent","unconfirmedTransactions","creationTimestamp","inputs","outputs","size","desiredFormat","Main","AppActions"],"mappings":"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","file":"static/js/8.1c85a971.chunk.js","sourcesContent":["import React from 'react';\n\nimport environment from '../../../config/environment';\n\ninterface ICoinValueProps {\n  value: number;\n  coinName?: string;\n}\n\nexport class CoinValueComponent extends React.PureComponent<ICoinValueProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-coin-value  u-word-wrap u-word-wrap--ellipsis\">\n        {this.getFormattedValue()}{' '}\n        {this.props.coinName\n          ? this.props.coinName\n          : environment.blockchain.coinName.toUpperCase()}\n      </div>\n    );\n  }\n\n  private getFormattedValue(): string {\n    const { value } = this.props;\n\n    const formattedValue = value / 1e9;\n\n    if (formattedValue < 1 && formattedValue !== 0) {\n      return formattedValue\n        .toFixed(9)\n        .split('')\n        .reduceRight((arr: string[], i: string) => {\n          if (i === '0' && arr.length === 0) {\n            return arr;\n          }\n\n          arr.push(i);\n\n          return arr;\n        }, [])\n        .reverse()\n        .join('');\n    }\n\n    return formattedValue.toString();\n  }\n}\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport './timestamp.scss';\n\nimport { Timestamp } from '../../../models/generated/timestamp';\n\ninterface ITimestampProps {\n  timestamp: Timestamp;\n  vertical?: boolean;\n}\n\nexport class TimestampComponent extends React.PureComponent<ITimestampProps> {\n  render(): JSX.Element {\n    const date = dayjs(this.props.timestamp);\n\n    if (this.props.vertical) {\n      return (\n        <div className=\"bi-timestamp u-word-wrap u-word-wrap--ellipsis bi-timestamp--vertical\">\n          <span className=\"bi-timestamp__time\">{date.format('HH:mm:ss')}</span>\n          <span className=\"bi-timestamp__date\">\n            {date.format('DD.MM.YYYY')}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"bi-timestamp u-word-wrap u-word-wrap--ellipsis\">\n        <span className=\"bi-timestamp__time\">{date.format('HH:mm:ss')}</span>\n        <span className=\"bi-timestamp__date\">{date.format('DD.MM.YYYY')}</span>\n      </div>\n    );\n  }\n}\n","export enum TIMESPAN {\n  DAYS_30 = '30days',\n  // DAYS_60 = '60days',\n  DAYS_180 = '180days',\n  YEAR_1 = '1year',\n  YEAR_2 = '2years',\n  // ALLTIME = 'alltime',\n}\n","import axios, { AxiosResponse } from 'axios';\nimport environment from '../config/environment';\n\nexport interface IGetBlocksParams {\n  limit?: number;\n  offset?: number;\n  startDate?: number | null;\n  endDate?: number | null;\n  sortBy?: string;\n  sortDirection?: string;\n  searchQuery?: string;\n}\n\nexport class BlockApiService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}/blocks`;\n  }\n\n  static getBlock(id: string): any {\n    return axios\n      .get(`${BlockApiService.apiUrl}/${id}`)\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Block api service. Request: ${BlockApiService.apiUrl}/${id}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getBlocks({\n    limit,\n    offset,\n    sortBy,\n    sortDirection,\n    startDate,\n    endDate,\n  }: IGetBlocksParams): any {\n    return axios\n      .get(`${BlockApiService.apiUrl}`, {\n        params: {\n          endDate,\n          limit,\n          offset,\n          sortBy: sortBy || 'height',\n          sortDirection: sortDirection || 'desc',\n          startDate,\n        },\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Block api service. Request: ${BlockApiService.apiUrl}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport {\n  GET_BLOCK,\n  GET_BLOCK_SUCCESS,\n  GET_BLOCKS,\n  GET_BLOCKS_SUCCESS,\n} from '../constants/block.types';\nimport {\n  BlockApiService,\n  IGetBlocksParams,\n} from '../services/block.api.service';\n\nexport interface BlockActions extends ActionCreatorsMapObject {\n  getBlocks: (args: IGetBlocksParams) => any;\n  getBlock: (args: { id: string }) => any;\n}\n\nexport const BlockActions: BlockActions = {\n  getBlocks({\n    limit,\n    offset,\n    sortBy,\n    sortDirection,\n    startDate,\n    endDate,\n  }: IGetBlocksParams = {}): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_BLOCKS,\n      });\n\n      return BlockApiService.getBlocks({\n        limit,\n        offset,\n        sortBy,\n        sortDirection,\n        startDate,\n        endDate,\n      }).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n            limit,\n            offset,\n          },\n          type: GET_BLOCKS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getBlock({ id }: { id: string }): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_BLOCK,\n      });\n\n      return BlockApiService.getBlock(id).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_BLOCK_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","import React from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Sector } from 'recharts';\n\nimport './pie-chart.scss';\n\ninterface IPieChartProps {\n  data: any;\n  labels: any;\n  compact?: boolean;\n}\n\nconst COLORS = [\n  '#0088FE',\n  '#85144b',\n  '#FFBB28',\n  '#FF8042',\n  '#2ECC40',\n  '#FF4136',\n  '#001f3f',\n  '#0074D9',\n  '#FF851B',\n  '#00C49F',\n  '#F012BE',\n  '#7FDBFF',\n  '#FFDC00',\n  '#39CCCC',\n  '#3D9970',\n  '#B10DC9',\n  '#01FF70',\n];\n\nexport class PieChartComponent extends React.PureComponent<IPieChartProps> {\n  state = {\n    activeIndex: 0,\n  };\n\n  render(): JSX.Element {\n    const data = this.props.data\n      .map((item: any) => ({\n        name: item.name,\n        value: item.value,\n      }))\n      .sort((a: any, b: any) => b.y - a.y);\n\n    return (\n      <div className=\"bi-pie-chart\">\n        <div className=\"bi-pie-chart__chart\">\n          <ResponsiveContainer>\n            <PieChart>\n              <Pie\n                activeIndex={this.state.activeIndex}\n                activeShape={this.renderActiveShape}\n                data={data}\n                innerRadius={100}\n                outerRadius={140}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                onMouseEnter={this.onPieEnter}\n              >\n                {data.map((entry: any, index: number) => (\n                  <Cell\n                    key={`cell-${entry.value}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n\n        <div className=\"bi-pie-chart__legend bi-pie-chart__table bi-table\">\n          <div className=\"bi-pie-chart__row bi-table__row bi-pie-chart__row--header\">\n            <div className=\"bi-pie-chart__cell bi-table__cell\">\n              {this.props.labels.name}\n            </div>\n            <div className=\"bi-pie-chart__cell bi-table__cell\">\n              {this.props.labels.value}\n            </div>\n          </div>\n\n          {this.props.data.map((item: any, index: number) => (\n            <div className=\"bi-pie-chart__row bi-table__row\" key={index}>\n              <div className=\"bi-pie-chart__cell bi-table__cell\">\n                <span>{this.props.labels.name}</span> {item.name}\n              </div>\n              <div className=\"bi-pie-chart__cell bi-table__cell\">\n                <span>{this.props.labels.value}</span> {item.value}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveShape = (props: any) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value,\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`Blocks: ${value}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`(Rate: ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n\n  onPieEnter = (data: any, index: number) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n}\n\nexport default PieChartComponent;\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","import { getStruct } from 'redux-struct';\nimport { GET_UNCONFIRMED_TRANSACTIONS_STRUCT } from '../constants/struct.types';\n\nexport const getUnconfirmedTransactionsStructSelector = (state: any) =>\n  getStruct(GET_UNCONFIRMED_TRANSACTIONS_STRUCT)(state);\n","import axios, { AxiosResponse } from 'axios';\n\nimport environment from '../config/environment';\n\nimport { IChartParams } from '../actions/chart.actions';\n\nimport { TIMESPAN } from '../constants/timespan.constant';\n\nexport class ChartApiService {\n  static getChart(chartType: string, options: IChartParams = {}): any {\n    // TODO: all doesnt work properly\n    // const timespan =\n    //   options.timespan === TIMESPAN.ALLTIME ? 'all' : options.timespan;\n\n    const timespan = options.timespan;\n\n    return axios\n      .get(`${environment.apiUrl}/charts/${chartType}`, {\n        params: {\n          timespan: timespan || TIMESPAN.DAYS_30,\n        },\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Block api service. Request: ${environment.apiUrl}/charts/${chartType}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport { GET_CHART, GET_CHART_SUCCESS } from '../constants/chart.types';\nimport { TIMESPAN } from '../constants/timespan.constant';\nimport { ChartApiService } from '../services/chart.api.service';\n\nexport interface ChartActions extends ActionCreatorsMapObject {\n  getChart: (chartType: string, options?: IChartParams) => any;\n}\n\nexport interface IChartParams {\n  timespan?: TIMESPAN;\n}\n\nexport const ChartActions: ChartActions = {\n  getChart(chartType: string, options: IChartParams = {}): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_CHART,\n      });\n\n      return ChartApiService.getChart(chartType, options).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_CHART_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport { convertInfoItemValue } from '../../../utils/convertInfoItemvalue';\n\nimport './chart-tooltip.scss';\ninterface ChartProps {\n  type: string;\n  payload: any[];\n  label: string;\n  isScale: boolean;\n}\nexport class ChartTooltipComponent extends React.PureComponent<ChartProps> {\n  render(): JSX.Element {\n    const date = dayjs(this.props.label).format('DD.MM.YYYY');\n\n    let value = null;\n    const payload = this.props.payload ? this.props.payload[0] : null;\n\n    if (payload) {\n      const type = payload.payload.type || 'chart';\n      const transformValue = this.props.isScale\n        ? payload.payload.originalValue\n        : this.props.payload[0].value;\n\n      value = convertInfoItemValue(type, transformValue);\n    }\n\n    return (\n      <div className=\"bi-chart-tooltip\">\n        <div className=\"bi-chart-tooltip__label\">{date}</div>\n        {value}\n      </div>\n    );\n  }\n}\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport { convertInfoItemValue } from '../../../utils/convertInfoItemvalue';\nimport { formatNumberMetricPrefix } from '../../../utils/formatNumberMetricPrefix';\n\nimport { ChartTooltipComponent } from '../chart-tooltip/chart-tooltip.component';\n\ninterface IAreaChartProps {\n  data: any;\n  compact?: boolean;\n  isScale: boolean;\n}\n\nconst VERY_SMALL_NUMBER = 0.0001;\n\nexport class AreaChartComponent extends React.PureComponent<IAreaChartProps> {\n  constructor(props: any) {\n    super(props);\n\n    this.formatLabel = this.formatLabel.bind(this);\n    this.formatXLabel = this.formatXLabel.bind(this);\n    this.formatTooltip = this.formatTooltip.bind(this);\n    this.renderTooltip = this.renderTooltip.bind(this);\n  }\n\n  render(): JSX.Element {\n    let data = this.props.data;\n\n    const max = Math.ceil(\n      Math.max.apply(\n        null,\n        data.map((item: any) => item.value)\n      )\n    );\n\n    const maxDomain =\n      (Math.ceil(max / Math.pow(10, max.toString().length - 1)) + 2) *\n      Math.pow(10, max.toString().length - 1);\n\n    // Logarithmic scale doesn't support values under 0 or equal to 0\n    if (this.props.isScale) {\n      data = data.map((item: any) => {\n        return {\n          ...item,\n          originalValue: item.value,\n          value: item.value <= 0 ? VERY_SMALL_NUMBER : item.value,\n        };\n      });\n    }\n\n    return (\n      <ResponsiveContainer width={'100%'} height={'100%'}>\n        <AreaChart data={data}>\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"1\" x2=\"1\" y2=\"0\">\n              <stop offset=\"20%\" stopColor=\"#0078FF\" stopOpacity={0} />\n              <stop offset=\"80%\" stopColor=\"#0078FF\" stopOpacity={0.2} />\n            </linearGradient>\n          </defs>\n\n          {this.props.compact ? null : (\n            <CartesianGrid\n              stroke=\"#e8e8e8\"\n              vertical={false}\n              strokeDasharray=\"6 4\"\n              fill=\"#fff\"\n            />\n          )}\n\n          <XAxis\n            dataKey=\"timestamp\"\n            tick={{ fill: '#828795', fontSize: 14 }}\n            tickLine={false}\n            tickCount={100}\n            tickMargin={10}\n            tickFormatter={this.formatXLabel}\n            minTickGap={30}\n            hide={this.props.compact}\n          />\n\n          <YAxis\n            dataKey=\"value\"\n            domain={[this.props.isScale ? VERY_SMALL_NUMBER : 0, maxDomain]}\n            scale={this.props.isScale ? 'log' : 'auto'}\n            tickMargin={10}\n            tickLine={false}\n            tickCount={5}\n            minTickGap={30}\n            tick={{ fill: '#828795', fontSize: 14 }}\n            tickFormatter={this.formatLabel}\n            hide={this.props.compact}\n          />\n\n          <Tooltip content={this.renderTooltip} />\n\n          <Area\n            type=\"linear\"\n            dataKey=\"value\"\n            stroke=\"#0078FF\"\n            yAxisId={0}\n            fillOpacity={1}\n            fill={'url(#colorUv)'}\n            animationDuration={300}\n            isAnimationActive={!this.props.compact}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  private renderTooltip(props: any): JSX.Element {\n    return <ChartTooltipComponent {...props} isScale={this.props.isScale} />;\n  }\n\n  private formatLabel(value: number): string {\n    return formatNumberMetricPrefix(value, { fractionDigits: 0 });\n  }\n\n  private formatXLabel(value: number): string {\n    return dayjs(value).format('DD MMM YYYY');\n  }\n\n  private formatTooltip(value: any): string {\n    return convertInfoItemValue('chart', value);\n  }\n}\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n  GET_ISSUED_TOKENS_BY_ID_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/tokens`,\n        params: {\n          limit,\n          offset,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getSearchIssuedTokensByQuery(\n    dispatch: any,\n    { searchQuery, limit, offset }: any\n  ): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/tokens/search`,\n        params: {\n          limit,\n          offset,\n          query: searchQuery,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/api/v1/tokens`,\n        params: {\n          limit,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getIssuedTokensById(dispatch: any, tokenId: string): any {\n    return fetchStruct(\n      GET_ISSUED_TOKENS_BY_ID_STRUCT,\n      {\n        method: 'get',\n        url: `${IssuedTokensService.apiUrl}/tokens/${tokenId}/issuingBox`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport { GET_TOKENS_SUCCESS } from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) => {\n      if (!params.searchQuery || params.searchQuery?.trim()?.length < 3) {\n        return IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n          (data: any) => {\n            dispatch({\n              payload: {\n                offset: params.offset || 0,\n              },\n              type: GET_TOKENS_SUCCESS,\n            });\n          }\n        );\n      }\n\n      return IssuedTokensService.getSearchIssuedTokensByQuery(\n        dispatch,\n        params\n      ).then((data: any) => {\n        dispatch({\n          payload: {\n            offset: params.offset || 0,\n          },\n          type: GET_TOKENS_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport { GET_UNCONFIRMED_TRANSACTIONS_STRUCT } from '../constants/struct.types';\n\nexport class UnconfirmedTransactionsService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getUnconfirmedTokensList(\n    dispatch: any,\n    { limit, offset, sortBy, sortDirection }: any\n  ): any {\n    return fetchStruct(\n      GET_UNCONFIRMED_TRANSACTIONS_STRUCT,\n      {\n        method: 'get',\n        url: `${UnconfirmedTransactionsService.apiUrl}/transactions/unconfirmed`,\n        params: {\n          limit,\n          offset,\n          sortBy: sortBy || 'size',\n          sortDirection: sortDirection || 'desc',\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { GET_UNCONFIRMED_TRANSACTIONS_SUCCESS } from './../constants/unconfirmed.types';\nimport { UnconfirmedTransactionsService } from '../services/unconfirmed.api.service';\n\nexport interface UnconfirmedTransactionsActions\n  extends ActionCreatorsMapObject {\n  getMempool: (params: any) => any;\n}\n\nexport const UnconfirmedTransactionsActions: UnconfirmedTransactionsActions = {\n  getMempool(params: any) {\n    return (dispatch: any) =>\n      UnconfirmedTransactionsService.getUnconfirmedTokensList(\n        dispatch,\n        params\n      ).then((data: any) => {\n        dispatch({\n          payload: {\n            offset: params.offset || 0,\n          },\n          type: GET_UNCONFIRMED_TRANSACTIONS_SUCCESS,\n        });\n      });\n  },\n};\n","import React from 'react';\n\nimport './widget.scss';\n\nexport const Widget = ({ children }: any): JSX.Element => {\n  return <div className={'bi-widget'}>{children}</div>;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport './widget-button-more.scss';\n\ninterface ButtonProps {\n  title: string;\n  to: any;\n}\n\nexport const WidgetButtonMore = ({ title, to }: ButtonProps): JSX.Element => {\n  return (\n    <Link className={'bi-widget-button-more g-flex'} to={to}>\n      <FormattedMessage id={title} />\n    </Link>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport './widget-title.scss';\n\ninterface WidgetTitleProps {\n  title: string;\n  icon: React.ReactNode;\n}\n\nexport const WidgetTitle = ({ title, icon }: WidgetTitleProps): JSX.Element => {\n  return (\n    <div className=\"bi-widget-title g-flex\">\n      {icon}\n      <h2 className=\"bi-widget-title__text\">\n        <FormattedMessage id={title} />\n      </h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport './widget-table-header.scss';\n\ntype Props = {\n  tiles: string[];\n};\n\nexport const WidgetTableHeader = (props: Props) => {\n  return (\n    <div className=\"widget-table-header widget-table__row bi-widget-table__row\">\n      {props.tiles.map((id) => (\n        <div key={id} className=\"widget-table__cell bi-widget-table__cell\">\n          <FormattedMessage id={id} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LoaderLogo from 'src/components/loader/loader';\nimport { WidgetTableHeader } from './widget-table-header/widget-table-header';\nimport './widget-table.scss';\n\nexport type Column = {\n  value: any;\n};\n\nexport type Row = Column[];\ntype Props = {\n  isFetching: boolean;\n  data?: Row[];\n  headerTiles: any;\n};\n\nexport const WidgetTable = ({ headerTiles, data, isFetching }: Props) => {\n  if (isFetching) {\n    return (\n      <div className=\"widget-table-loader\">\n        <LoaderLogo></LoaderLogo>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"widget-table bi-widget-table\">\n      <WidgetTableHeader tiles={headerTiles} />\n      {data\n        ? data.map((row, i) => (\n            <div key={i} className=\"widget-table__row bi-widget-table__row\">\n              {Object.keys(row).map((column, j) => (\n                <div\n                  key={j}\n                  className=\"widget-table__cell bi-widget-table__cell\"\n                >\n                  {row[column].link ? (\n                    <Link\n                      to={`${row[column].linkValue}`}\n                      className=\"u-word-wrap u-word-wrap--ellipsis\"\n                    >\n                      {row[column].value}\n                    </Link>\n                  ) : (\n                    row[column].value\n                  )}\n                </div>\n              ))}\n            </div>\n          ))\n        : null}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './widget-body.scss';\n\nexport const WidgetBody = ({ children }: any): JSX.Element => {\n  return <div className={'bi-widget-body'}>{children}</div>;\n};\n","export const MAX_TOKENS_RENDERED = 10;\nexport const WIDGET_REFRESH_INTERVAL = 30000;\n","import {useEffect, useRef} from \"react\";\n\nexport default function useInterval(callback: Function, delay: number, zeroCall: Boolean = true) {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (zeroCall) tick()\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import { Widget } from '../widget/widget.components';\nimport React, { useMemo } from 'react';\nimport { WidgetButtonMore } from '../widget-button-more/widget-button-more.component';\nimport { WidgetTitle } from '../widget-title/widget-title.component';\nimport { LatestBlocksIcon } from '../../common/icons/common.icons';\nimport { bindActionCreators } from 'redux';\nimport { BlockActions } from 'src/actions/block.actions';\nimport { connect } from 'react-redux';\nimport { AppState } from 'src/store/app.store';\nimport { WidgetTable } from '../widget-table/widget-table.component';\n\nimport './widget-blocks.scss';\nimport { TimestampComponent } from 'src/components/common/timestamp/timestamp.component';\nimport { CoinValueComponent } from 'src/components/common/coin-value/coin-value.component';\nimport { WidgetBody } from '../widget-body/widget-body.components';\nimport { WIDGET_REFRESH_INTERVAL } from '../../../constants/global.constants';\nimport useInterval from '../../../hooks/useInterval';\n\nexport const WidgetBlocks = ({ getBlocks, blocks }: any): JSX.Element => {\n  useInterval(() => {\n    getBlocks({ limit: 8 });\n  }, WIDGET_REFRESH_INTERVAL);\n  const tableData = useMemo(() => {\n    return blocks?.blocks.reduce(\n      (\n        acc: any,\n        {\n          height,\n          timestamp,\n          miner: { address, name },\n          minerReward,\n          id,\n          transactionsCount,\n        }: any\n      ) => {\n        return [\n          ...acc,\n          {\n            height: { value: height, link: true, linkValue: `/blocks/${id}` },\n            timestamp: {\n              value: <TimestampComponent vertical timestamp={timestamp} />,\n            },\n            minerAddress: {\n              value: name,\n              link: true,\n              linkValue: `/addresses/${address}`,\n            },\n            transactionsCount: {\n              value: transactionsCount,\n            },\n            minerReward: {\n              value: <CoinValueComponent value={minerReward} />,\n            },\n          },\n        ];\n      },\n      []\n    );\n  }, [blocks]);\n\n  return (\n    <Widget className=\"bi-widget-blocks\">\n      <div className=\"g-flex  bi-widget-blocks__header\">\n        <WidgetTitle\n          title={'common.navigation.latest-blocks'}\n          icon={<LatestBlocksIcon />}\n        />\n        {/*TODO Add dropdown*/}\n      </div>\n\n      <WidgetBody>\n        <WidgetTable\n          headerTiles={[\n            'common.block.height',\n            'common.block.age',\n            'common.block.minedBy',\n            'common.block.transactions',\n            'common.block.minerReward',\n          ]}\n          data={tableData}\n          isFetching={blocks.fetching}\n        />\n      </WidgetBody>\n\n      <div className=\"bi-widget-blocks__button\">\n        <WidgetButtonMore\n          title={'components.widget.view-all-blocks'}\n          to={'/latest-blocks'}\n        />\n      </div>\n    </Widget>\n  );\n};\n\nfunction mapStateToProps(state: AppState): AppState {\n  return state;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators({ ...BlockActions }, dispatch);\n}\n\nexport const WidgetBlocksComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WidgetBlocks);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { TIMESPAN } from '../../../constants/timespan.constant';\n\nimport './timespan-compact.scss';\n\ninterface TimespanProps {\n  selected: TIMESPAN;\n  setTimespan: Function;\n}\n\nexport class TimespanCompactComponent extends React.Component<TimespanProps> {\n  constructor(props: TimespanProps) {\n    super(props);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-timespan-compact\">\n        {Object.keys(TIMESPAN).map((span) => {\n          const btnClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-timespan-compact__span': true,\n            'bi-timespan-compact__span--active':\n              this.props.selected === TIMESPAN[span],\n          });\n\n          return (\n            <button\n              className={btnClassNames}\n              key={span}\n              onClick={(_) => this.props.setTimespan(TIMESPAN[span])}\n            >\n              <FormattedMessage\n                id={`components.timespan.span.${TIMESPAN[span]}`}\n              />\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { TIMESPAN } from '../../../constants/timespan.constant';\n\nimport { ChartState } from '../../../reducers/chart.reducer';\nimport { AppState } from '../../../store/app.store';\n\nimport { ChartActions } from '../../../actions/chart.actions';\n\nimport { AreaChartComponent } from '../area-chart/area-chart.component';\nimport { PieChartComponent } from '../pie-chart/pie-chart.component';\nimport { TimespanCompactComponent } from '../timespan-compact/timespan-compact.component';\n\nimport './chart-compact.scss';\nimport { InfoItem, StatsState } from 'src/reducers/stats.reducer';\nimport {WIDGET_REFRESH_INTERVAL} from \"../../../constants/global.constants\";\n\ninterface IChartCompactProps {\n  chartType: string;\n}\n\ninterface IChartParams {\n  timespan: TIMESPAN;\n  circulationSupply?: InfoItem;\n}\n\nclass ChartCompact extends React.PureComponent<\n  ChartState & ChartActions & StatsState & IChartCompactProps\n> {\n  state: IChartParams = {\n    timespan: TIMESPAN.DAYS_30,\n  };\n  private interval: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.setTimespan = this.setTimespan.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.updateChart()\n    this.interval = setInterval(this.updateChart.bind(this), WIDGET_REFRESH_INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  updateChart(){\n    this.props.getChart(this.props.chartType, this.state);\n  }\n\n  render(): JSX.Element {\n    const chartClassNames = classnames({\n      'bi-chart-compact': true,\n      'g-flex-column': true,\n      'g-flex-column__item-fixed': true,\n    });\n\n    return (\n      <div className={chartClassNames}>\n        <FormattedMessage\n          id={`common.pages.chart.title.${this.props.chartType}`}\n        >\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-chart-compact__wrapper\">\n          <div className=\"bi-chart-compact__top g-flex\">\n            <div>\n              <div className=\"bi-chart-compact__subtitle\">\n                <FormattedMessage\n                  id={`components.chart.subtitle.${this.props.chartType}`}\n                />\n              </div>\n              <div className=\"bi-chart-compact__amount\">\n                {String(\n                  this.props.info.find(({ title }) => title === 'supply')?.value\n                ).toUpperCase()}\n              </div>\n            </div>\n\n            {this.renderControls()}\n          </div>\n\n          {this.renderBody()}\n        </div>\n      </div>\n    );\n  }\n\n  private renderBody(): JSX.Element {\n    return (\n      <div className=\"bi-chart-compact__body g-flex-column__item\">\n        <div className=\"bi-chart-compact__chart\">\n          {this.props.data && this.renderChart()}\n        </div>\n      </div>\n    );\n  }\n\n  private renderChart(): JSX.Element {\n    switch (this.props.chartType) {\n      case 'hash-rate-distribution': {\n        return (\n          <PieChartComponent\n            data={this.formatData()}\n            labels={{\n              name: (\n                <FormattedMessage\n                  id={'components.chart.hash-rate-distribution.labels.name'}\n                />\n              ),\n              value: (\n                <FormattedMessage\n                  id={'components.chart.hash-rate-distribution.labels.value'}\n                />\n              ),\n            }}\n          />\n        );\n      }\n\n      default: {\n        return <AreaChartComponent data={this.formatData()} isScale={false} />;\n      }\n    }\n  }\n\n  private renderControls(): JSX.Element | null {\n    switch (this.props.chartType) {\n      case 'hash-rate-distribution': {\n        return null;\n      }\n\n      default: {\n        return (\n          <div className=\"bi-chart-compact__controls g-flex\">\n            {\n              <TimespanCompactComponent\n                selected={this.state.timespan}\n                setTimespan={this.setTimespan}\n              />\n            }\n          </div>\n        );\n      }\n    }\n  }\n\n  private formatData(): any {\n    switch (this.props.chartType) {\n      case 'miners-revenue':\n      case 'total': {\n        return this.props.data.map((item: any) => {\n          return {\n            timestamp: item.timestamp,\n            type: 'coin',\n            value: item.value / 1e9,\n          };\n        });\n      }\n\n      case 'blockchain-size':\n      case 'block-size': {\n        return this.props.data.map((item: any) => {\n          return {\n            timestamp: item.timestamp,\n            type: 'bytes',\n            value: item.value,\n          };\n        });\n      }\n\n      case 'hash-rate': {\n        return this.props.data\n          .slice(0, this.props.data.length - 1)\n          .map((item: any) => {\n            return {\n              timestamp: item.timestamp,\n              type: 'hashRateDay',\n              value: item.value,\n            };\n          });\n      }\n\n      default: {\n        return this.props.data;\n      }\n    }\n  }\n\n  private setTimespan(timespan: TIMESPAN) {\n    this.setState({ ...this.state, timespan });\n    this.props.getChart(this.props.chartType, { timespan });\n  }\n}\n\nfunction mapStateToProps(\n  state: AppState,\n  props: IChartCompactProps\n): ChartState {\n  return { ...state.chart, ...state.stats, ...props };\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators(ChartActions, dispatch);\n}\n\nexport const ChartCompactComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartCompact);\n\nexport default ChartCompactComponent;\n","import { Widget } from '../widget/widget.components';\nimport ChartCompactComponent from '../../charts/chart-compact/chart-compact.component';\nimport React from 'react';\nimport { WidgetButtonMore } from '../widget-button-more/widget-button-more.component';\nimport { WidgetTitle } from '../widget-title/widget-title.component';\nimport { ChartsIcon } from '../../common/icons/common.icons';\n\nimport './widget-charts.scss';\n\nexport const WidgetCharts = (): JSX.Element => {\n  return (\n    <Widget className=\"bi-widget-charts\">\n      <div className=\"g-flex bi-widget-charts__header\">\n        <WidgetTitle title={'components.charts.title'} icon={<ChartsIcon />} />\n        {/*TODO Add dropdown*/}\n      </div>\n\n      <ChartCompactComponent chartType={'total'} />\n      <div className=\"bi-widget-charts__button\">\n        <WidgetButtonMore\n          title={'components.widget.view-all-charts'}\n          to={'/charts'}\n        />\n      </div>\n    </Widget>\n  );\n};\n","import { Widget } from '../widget/widget.components';\nimport React, { useMemo } from 'react';\nimport { WidgetButtonMore } from '../widget-button-more/widget-button-more.component';\nimport { WidgetTitle } from '../widget-title/widget-title.component';\nimport { IssuedTokensIcon } from '../../common/icons/common.icons';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport format from 'format-number';\nimport { WidgetTable } from '../widget-table/widget-table.component';\n\nimport './widget-issued-tokens.scss';\nimport { getAllIssuedTokensStructSelector } from 'src/selectors/issuedTokens';\nimport { IssuedTokensActions } from 'src/actions/issuedTokens.actions';\nimport { WidgetBody } from '../widget-body/widget-body.components';\nimport useInterval from \"../../../hooks/useInterval\";\nimport {WIDGET_REFRESH_INTERVAL} from \"../../../constants/global.constants\";\n\nexport const WidgetIssuedTokens = ({ getTokens, tokens }: any): JSX.Element => {\n  useInterval(() => {\n    getTokens({ limit: 8 });\n  }, WIDGET_REFRESH_INTERVAL);\n\n  const tableData = useMemo(() => {\n    return tokens.data?.items?.reduce(\n      (acc: any, { id, name, emissionAmount, decimals }: any) => {\n        return [\n          ...acc,\n          {\n            id: {\n              value: id.slice(0, 10),\n              link: true,\n              linkValue: `/token/${id}`,\n            },\n            name: {\n              value: name,\n            },\n            amount: {\n              value: format({ integerSeparator: ' ' })(emissionAmount),\n            },\n            decimals: {\n              value: decimals,\n            },\n          },\n        ];\n      },\n      []\n    );\n  }, [tokens]);\n\n  return (\n    <Widget className=\"bi-widget-charts\">\n      <div className=\"g-flex  bi-widget-charts__header\">\n        <WidgetTitle\n          title={'common.navigation.issued-tokens'}\n          icon={<IssuedTokensIcon />}\n        />\n      </div>\n\n      <WidgetBody>\n        <WidgetTable\n          headerTiles={[\n            'common.token.id',\n            'common.token.name',\n            'common.token.amount',\n            'common.token.decimals',\n          ]}\n          data={tableData}\n          isFetching={!tableData}\n        />\n      </WidgetBody>\n      <div className=\"bi-widget-charts__button\">\n        <WidgetButtonMore\n          title={'components.widget.view-all'}\n          to={'/issued-tokens'}\n        />\n      </div>\n    </Widget>\n  );\n};\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nexport const WidgetIssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WidgetIssuedTokens);\n","import { Widget } from '../widget/widget.components';\nimport React, { useMemo } from 'react';\nimport { WidgetButtonMore } from '../widget-button-more/widget-button-more.component';\nimport { WidgetTitle } from '../widget-title/widget-title.component';\nimport { MempoolIcon } from '../../common/icons/common.icons';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { WidgetTable } from '../widget-table/widget-table.component';\n\nimport './widget-mempool.scss';\nimport { TimestampComponent } from 'src/components/common/timestamp/timestamp.component';\nimport { UnconfirmedTransactionsActions } from 'src/actions/unconfirmedTransactions.actions';\nimport { getUnconfirmedTransactionsStructSelector } from 'src/selectors/unconfirmedTransactions';\nimport { formatNumberMetricPrefix } from 'src/utils/formatNumberMetricPrefix';\nimport { WidgetBody } from '../widget-body/widget-body.components';\nimport useInterval from \"../../../hooks/useInterval\";\nimport {WIDGET_REFRESH_INTERVAL} from \"../../../constants/global.constants\";\n\nexport const WidgetMempool = ({\n  getMempool,\n  unconfirmedTransactions,\n}: any): JSX.Element => {\n  useInterval(() => {\n    getMempool({ limit: 8 });\n  }, WIDGET_REFRESH_INTERVAL);\n\n  const tableData = useMemo(() => {\n    return unconfirmedTransactions.data?.items?.reduce(\n      (acc: any, { creationTimestamp, inputs, id, outputs, size }: any) => {\n        return [\n          ...acc,\n          {\n            id: {\n              value: id.slice(0, 10),\n              link: true,\n              linkValue: `/transactions/${id}`,\n            },\n            creationTimestamp: {\n              value: (\n                <TimestampComponent vertical timestamp={creationTimestamp} />\n              ),\n            },\n            inputs: {\n              value: inputs.length,\n            },\n            outputs: {\n              value: outputs.length,\n            },\n            size: {\n              value: (\n                <span className=\"u-word-wrap u-word-wrap--ellipsis\">\n                  {formatNumberMetricPrefix(size, {\n                    desiredFormat: 'k',\n                  })}\n                  B\n                </span>\n              ),\n            },\n          },\n        ];\n      },\n      []\n    );\n  }, [unconfirmedTransactions]);\n\n  return (\n    <Widget className=\"bi-widget-charts\">\n      <div className=\"g-flex  bi-widget-charts__header\">\n        <WidgetTitle\n          title={'common.navigation.mempool'}\n          icon={<MempoolIcon />}\n        />\n      </div>\n\n      <WidgetBody>\n        <WidgetTable\n          headerTiles={[\n            'common.token.id',\n            'components.unconfirmed-transactions.creation-timestamp',\n            'components.unconfirmed-transactions.inputs-quantity',\n            'components.unconfirmed-transactions.outputs-quantity',\n            'common.block.size',\n          ]}\n          data={tableData}\n          isFetching={!tableData}\n        />\n      </WidgetBody>\n\n      <div className=\"bi-widget-charts__button\">\n        <WidgetButtonMore\n          title={'components.widget.view-all'}\n          to={'/mempool'}\n        />\n      </div>\n    </Widget>\n  );\n};\n\nconst mapStateToProps = (state: any): any => ({\n  unconfirmedTransactions: getUnconfirmedTransactionsStructSelector(state),\n  offset: state.unconfirmedTransactions.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...UnconfirmedTransactionsActions }, dispatch);\n};\n\nexport const WidgetMempoolComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WidgetMempool);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { AppActions } from 'src/actions/app.actions';\nimport { BlockActions } from 'src/actions/block.actions';\nimport { WidgetBlocksComponent } from 'src/components/widgets/widget-blocks/widget-blocks.component';\nimport { WidgetCharts } from 'src/components/widgets/widget-charts/widget-charts.components';\nimport { WidgetIssuedTokensComponent } from 'src/components/widgets/widget-issued-tokens/widget-issued-tokens.component';\nimport { WidgetMempoolComponent } from 'src/components/widgets/widget-mempool/widget-mempool.component';\nimport { AppState } from 'src/store/app.store';\n\nimport './main.scss';\n\nconst MainComponent = () => {\n  return (\n    <div className=\"bi-main\">\n      <div className=\"bi-main__container\">\n        <div className=\"bi-main__col\">\n          <WidgetBlocksComponent />\n        </div>\n        <div className=\"bi-main__col\">\n          <WidgetMempoolComponent />\n        </div>\n        <div className=\"bi-main__col\">\n          <WidgetCharts />\n        </div>\n        <div className=\"bi-main__col\">\n          <WidgetIssuedTokensComponent />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state: AppState): AppState {\n  return state;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators({ ...BlockActions, ...AppActions }, dispatch);\n}\n\nconst Main = connect(mapStateToProps, mapDispatchToProps)(MainComponent);\n\nexport default Main;\n"],"sourceRoot":""}