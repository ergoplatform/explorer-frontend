{"version":3,"sources":["components/common/paginate-simple/paginate-simple.component.tsx","components/common/limit-selector/limit-selector.component.tsx","selectors/issuedTokens.ts","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","../node_modules/react-truncate/lib/Truncate.js","components/collapse-text/collapse-text.component.tsx","components/issued-tokens-table/issued-tokens-table.component.tsx","pages/issued-tokens/issued-tokens.component.tsx"],"names":["PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","LimitSelectorComponent","label","items","map","item","index","selectorItemClassNames","classNames","selected","getLimitLink","PureComponent","getAllIssuedTokensStructSelector","state","getStruct","GET_ALL_ISSUED_TOKENS_STRUCT","IssuedTokensService","environment","apiUrl","dispatch","offset","fetchStruct","method","url","apiUrlV1","params","searchQuery","query","GET_TOTAL_ISSUED_TOKENS_STRUCT","tokenId","GET_ISSUED_TOKENS_BY_ID_STRUCT","IssuedTokensActions","getTokens","trim","length","getAllIssuedTokens","then","data","payload","type","GET_TOKENS_SUCCESS","getSearchIssuedTokensByQuery","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","Truncate","_Component","_ref","_len","args","Array","_key","_this","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","propTypes","PropTypes","oneOfType","oneOf","number","bool","func","defaultProps","CollapseText","useState","isExpanded","setIsExpanded","isTruncated","setIsTruncated","toggler","href","onClick","e","preventDefault","IssuedTokensTableComponent","tokens","renderTable","colSpan","token","readOnly","name","format","integerSeparator","emissionAmount","decimals","description","IssuedTokens","updateTable","debounce","queryString","parse","history","location","search","stringify","onChangeInput","searchInput","isFetching","getParams","reloadTokens","JSON","title","onChange","placeholder","page","forEach","isEmpty","parseInt","IssuedTokensComponent","connect","bindActionCreators"],"mappings":"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","file":"static/js/15.6c4ce203.chunk.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<IPaginateSimpleProps> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './limit-selector.scss';\n\ninterface ILimitSelectorProps {\n  label: string | JSX.Element;\n  items: number[];\n  selected: number;\n  getLimitLink: (limit: number) => string;\n}\n\nexport class LimitSelectorComponent extends React.PureComponent<ILimitSelectorProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-limit-selector\">\n        <span className=\"bi-limit-selector__label\">{this.props.label}</span>\n\n        {this.props.items.map((item, index) => {\n          const selectorItemClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-limit-selector__item': true,\n            'bi-limit-selector__item--selected': item === this.props.selected,\n          });\n\n          return (\n            <Link\n              className={selectorItemClassNames}\n              key={index}\n              to={this.props.getLimitLink(item)}\n            >\n              {item}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n  GET_ISSUED_TOKENS_BY_ID_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/tokens`,\n        params: {\n          limit,\n          offset,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getSearchIssuedTokensByQuery(\n    dispatch: any,\n    { searchQuery, limit, offset }: any\n  ): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/tokens/search`,\n        params: {\n          limit,\n          offset,\n          query: searchQuery,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrlV1}/api/v1/tokens`,\n        params: {\n          limit,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getIssuedTokensById(dispatch: any, tokenId: string): any {\n    return fetchStruct(\n      GET_ISSUED_TOKENS_BY_ID_STRUCT,\n      {\n        method: 'get',\n        url: `${IssuedTokensService.apiUrl}/tokens/${tokenId}/issuingBox`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport { GET_TOKENS_SUCCESS } from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) => {\n      if (!params.searchQuery || params.searchQuery?.trim()?.length < 3) {\n        return IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n          (data: any) => {\n            dispatch({\n              payload: {\n                offset: params.offset || 0,\n              },\n              type: GET_TOKENS_SUCCESS,\n            });\n          }\n        );\n      }\n\n      return IssuedTokensService.getSearchIssuedTokensByQuery(\n        dispatch,\n        params\n      ).then((data: any) => {\n        dispatch({\n          payload: {\n            offset: params.offset || 0,\n          },\n          type: GET_TOKENS_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactTruncate from 'react-truncate';\n\ninterface IProps {\n  children: React.ReactChildren;\n  lines: number;\n}\n\nexport const CollapseText = ({ children, lines }: IProps) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const toggler = (\n    <>\n      {!isExpanded && '...'}\n      <br />\n      <a\n        href=\"#!\"\n        onClick={(e: any) => {\n          e.preventDefault();\n          setIsExpanded(!isExpanded);\n        }}\n      >\n        <FormattedMessage\n          id={isExpanded ? 'common.token.showLess' : 'common.token.showMore'}\n        />\n      </a>\n    </>\n  );\n  return (\n    <>\n      <ReactTruncate\n        lines={!isExpanded && lines}\n        ellipsis={toggler}\n        onTruncate={setIsTruncated}\n      >\n        {children}\n      </ReactTruncate>\n      {!isTruncated && isExpanded && toggler}\n    </>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport format from 'format-number';\nimport { Link } from 'react-router-dom';\nimport { CollapseText } from 'src/components/collapse-text/collapse-text.component';\n\nimport './issued-tokens-table.scss';\n\ninterface IssuedTokensTableProps {\n  tokens: any[];\n  isFetching: boolean;\n}\n\nexport class IssuedTokensTableComponent extends React.Component<IssuedTokensTableProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-issued-tokens-table\">\n        {!this.props.tokens ? null : this.renderTable()}\n      </div>\n    );\n  }\n\n  private renderTable(): JSX.Element {\n    return (\n      <table className=\"bi-issued-tokens-table__body bi-table\">\n        <thead className=\"bi-issued-tokens-table-header\">\n          <tr className=\"bi-issued-tokens-table-header bi-issued-tokens-table__row bi-table__row\">\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.id\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={2}\n            >\n              <FormattedMessage id=\"common.token.name\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.amount\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.decimals\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={3}\n            >\n              <FormattedMessage id=\"common.token.description\" />\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {this.props.tokens.map((token) => {\n            return (\n              <Link\n                to={`/token/${token.id}`}\n                className=\"bi-issued-tokens-table__row bi-table__row\"\n                key={token.id}\n              >\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.id\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={token.id}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={2}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.name\" />\n                  </div>\n\n                  {token.name}\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.amount\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={format({ integerSeparator: ' ' })(\n                      token.emissionAmount\n                    )}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.decimals\" />\n                  </div>\n\n                  {token.decimals}\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={3}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.description\" />\n                  </div>\n\n                  <div>\n                    <CollapseText lines={2}>{token.description}</CollapseText>\n                  </div>\n                </td>\n              </Link>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { debounce, isEmpty } from 'lodash';\n\nimport { AppState } from '../../store/app.store';\n\nimport { IGetBlocksParams } from '../../services/block.api.service';\n\nimport { LimitSelectorComponent } from '../../components/common/limit-selector/limit-selector.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { IssuedTokensActions } from '../../actions/issuedTokens.actions';\nimport { getAllIssuedTokensStructSelector } from '../../selectors/issuedTokens';\nimport { IssuedTokensTableComponent } from '../../components/issued-tokens-table/issued-tokens-table.component';\n\nimport './issued-tokens.scss';\n\ntype IDataProps = AppState &\n  IssuedTokensActions &\n  RouteComponentProps<{}> & {\n    tokens: any;\n    offset: number;\n  };\n\nclass IssuedTokens extends React.PureComponent<IDataProps, any> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n    this.getLimitLink = this.getLimitLink.bind(this);\n    const { searchQuery } = queryString.parse(\n      this.props.history.location.search\n    );\n\n    this.params = this.getParams();\n    this.state = {\n      searchInput: searchQuery || '',\n    };\n  }\n\n  componentDidMount(): void {\n    this.reloadTokens(this.params);\n  }\n\n  updateTable = debounce((value) => {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    this.props.history.push(\n      `/issued-tokens?${queryString.stringify({\n        searchQuery: value,\n        limit: params.limit,\n      })}`\n    );\n  }, 300);\n\n  onChangeInput = (e: any) => {\n    this.setState({ searchInput: e.target.value });\n\n    this.updateTable(e.target.value);\n  };\n\n  UNSAFE_componentWillReceiveProps(props: IDataProps): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n      this.reloadTokens(this.params);\n    }\n  }\n\n  renderTable = () => {\n    if (this.props.tokens.isFetching) {\n      return <p className=\"base-text\">Fetching Data...</p>;\n    }\n\n    if (this.props.tokens.data && this.props.tokens.data.total === 0) {\n      return (\n        <div className=\"bi-issued-tokens__body g-flex-column__item-fixed\">\n          <FormattedMessage id=\"components.data.wrong-query\" />\n        </div>\n      );\n    }\n\n    if (\n      !this.props.tokens.isFetching &&\n      this.props.tokens.data !== null &&\n      this.props.tokens.data.items.length > 0\n    ) {\n      return (\n        <>\n          <div className=\"bi-issued-tokens__body g-flex-column__item-fixed\">\n            <IssuedTokensTableComponent\n              tokens={this.props.tokens.data.items}\n              isFetching={this.props.tokens.isFetching}\n            />\n          </div>\n          <div className=\"bi-issued-tokens__footer g-flex-column__item-fixed g-flex\">\n            <div className=\"g-flex__item-fixed\">\n              <LimitSelectorComponent\n                items={[30, 60, 120]}\n                selected={this.params.limit}\n                label={<FormattedMessage id=\"components.data.show\" />}\n                getLimitLink={this.getLimitLink}\n              />\n            </div>\n\n            <div className=\"g-flex__item-fixed\">\n              <PaginateSimpleComponent\n                total={this.props.tokens.data.total}\n                limit={this.params.limit}\n                getPageUrl={this.getPageUrl}\n                forcePage={Math.floor(this.props.offset / this.params.limit)}\n              />\n            </div>\n          </div>\n        </>\n      );\n    }\n\n    return;\n  };\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-issued-tokens g-flex-column g-flex-column__item-fixed\">\n        <FormattedMessage id=\"common.pages.issued-tokens.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-issued-tokens__header g-flex-column__item-fixed g-flex\">\n          <div className=\"bi-issued-tokens__title\">\n            <FormattedMessage id=\"components.issued-tokens.title\" />\n          </div>\n\n          <div>\n            <input\n              className=\"bi-issued-tokens__input\"\n              type=\"string\"\n              onChange={this.onChangeInput}\n              value={this.state.searchInput}\n              placeholder=\"Search by ID or Number\"\n            />\n          </div>\n        </div>\n        {this.renderTable()}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private getLimitLink(limit: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.limit = limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private reloadTokens(params: IGetBlocksParams): void {\n    params = {\n      ...this.params,\n      ...params,\n      limit: params.limit || 30,\n      offset: params.offset || 0,\n      searchQuery: params.searchQuery,\n    };\n\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null) {\n        delete params[key];\n      }\n    });\n\n    this.props.getTokens(params);\n\n    if (params.offset === 0) {\n      delete params.offset;\n    }\n\n    if (params.limit === 30) {\n      delete params.limit;\n    }\n\n    if (isEmpty(queryString.stringify(params))) {\n      return;\n    }\n\n    this.props.history.push(`/issued-tokens?${queryString.stringify(params)}`);\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    const { searchQuery } = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n      searchQuery,\n    };\n  }\n}\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nconst IssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssuedTokens);\n\nexport default IssuedTokensComponent;\n"],"sourceRoot":""}